package autominion.database.persistence.entities;
// default package
// Generated 2 feb 2023 9:48:16 by Hibernate Tools 4.3.6.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Vehicles generated by hbm2java
 */
@Entity
@Table(name = "vehicles", catalog = "autominionbbdd", uniqueConstraints = @UniqueConstraint(columnNames = "registration"))
public class Vehicles extends AbstractEntity implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private long id;
	private Concessionaires concessionaires;
	private Customers customers;
	private String vehicleType;
	private String brand;
	private String model;
	private String registration;
	private String color;
	private Integer fabricationYear;
	private BigDecimal km;
	private Integer numberDoor;
	private Integer numberSeat;
	private String combustion;
	private String drivingType;
	private Date entryDate;
	private Set<Salesproposal> salesproposals = new HashSet<Salesproposal>(0);
	private Set<Repairs> repairses = new HashSet<Repairs>(0);

	public Vehicles() {
	}

	public Vehicles(String vehicleType) {
		this.vehicleType = vehicleType;
	}

	public Vehicles(Concessionaires concessionaires, Customers customers, String vehicleType, String brand,
			String model, String registration, String color, Integer fabricationYear, BigDecimal km, Integer numberDoor,
			Integer numberSeat, String combustion, String drivingType, Date entryDate,
			Set<Salesproposal> salesproposals, Set<Repairs> repairses) {
		this.concessionaires = concessionaires;
		this.customers = customers;
		this.vehicleType = vehicleType;
		this.brand = brand;
		this.model = model;
		this.registration = registration;
		this.color = color;
		this.fabricationYear = fabricationYear;
		this.km = km;
		this.numberDoor = numberDoor;
		this.numberSeat = numberSeat;
		this.combustion = combustion;
		this.drivingType = drivingType;
		this.entryDate = entryDate;
		this.salesproposals = salesproposals;
		this.repairses = repairses;
	}
	
	public Vehicles(Concessionaires concessionaires, Customers customers, String vehicleType, String brand,
			String model, String registration, String color, Integer fabricationYear, BigDecimal km, Integer numberDoor,
			Integer numberSeat, String combustion, String drivingType, Date entryDate) {
		this.concessionaires = concessionaires;
		this.customers = customers;
		this.vehicleType = vehicleType;
		this.brand = brand;
		this.model = model;
		this.registration = registration;
		this.color = color;
		this.fabricationYear = fabricationYear;
		this.km = km;
		this.numberDoor = numberDoor;
		this.numberSeat = numberSeat;
		this.combustion = combustion;
		this.drivingType = drivingType;
		this.entryDate = entryDate;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "concessionaireId")
	public Concessionaires getConcessionaires() {
		return this.concessionaires;
	}

	public void setConcessionaires(Concessionaires concessionaires) {
		this.concessionaires = concessionaires;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customerId")
	public Customers getCustomers() {
		return this.customers;
	}

	public void setCustomers(Customers customers) {
		this.customers = customers;
	}

	@Column(name = "vehicleType", nullable = false, length = 20)
	public String getVehicleType() {
		return this.vehicleType;
	}

	public void setVehicleType(String vehicleType) {
		this.vehicleType = vehicleType;
	}

	@Column(name = "brand", length = 45)
	public String getBrand() {
		return this.brand;
	}

	public void setBrand(String brand) {
		this.brand = brand;
	}

	@Column(name = "model", length = 50)
	public String getModel() {
		return this.model;
	}

	public void setModel(String model) {
		this.model = model;
	}

	@Column(name = "registration", unique = true, length = 9)
	public String getRegistration() {
		return this.registration;
	}

	public void setRegistration(String registration) {
		this.registration = registration;
	}

	@Column(name = "color", length = 20)
	public String getColor() {
		return this.color;
	}

	public void setColor(String color) {
		this.color = color;
	}

	@Column(name = "fabricationYear")
	public Integer getFabricationYear() {
		return this.fabricationYear;
	}

	public void setFabricationYear(Integer fabricationYear) {
		this.fabricationYear = fabricationYear;
	}

	@Column(name = "km", precision = 16)
	public BigDecimal getKm() {
		return this.km;
	}

	public void setKm(BigDecimal km) {
		this.km = km;
	}

	@Column(name = "numberDoor")
	public Integer getNumberDoor() {
		return this.numberDoor;
	}

	public void setNumberDoor(Integer numberDoor) {
		this.numberDoor = numberDoor;
	}

	@Column(name = "numberSeat")
	public Integer getNumberSeat() {
		return this.numberSeat;
	}

	public void setNumberSeat(Integer numberSeat) {
		this.numberSeat = numberSeat;
	}

	@Column(name = "combustion", length = 20)
	public String getCombustion() {
		return this.combustion;
	}

	public void setCombustion(String combustion) {
		this.combustion = combustion;
	}

	@Column(name = "drivingType", length = 20)
	public String getDrivingType() {
		return this.drivingType;
	}

	public void setDrivingType(String drivingType) {
		this.drivingType = drivingType;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "entry_date", length = 10)
	public Date getEntryDate() {
		return this.entryDate;
	}

	public void setEntryDate(Date entryDate) {
		this.entryDate = entryDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vehicles")
	public Set<Salesproposal> getSalesproposals() {
		return this.salesproposals;
	}

	public void setSalesproposals(Set<Salesproposal> salesproposals) {
		this.salesproposals = salesproposals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vehicles")
	public Set<Repairs> getRepairses() {
		return this.repairses;
	}

	public void setRepairses(Set<Repairs> repairses) {
		this.repairses = repairses;
	}

}
