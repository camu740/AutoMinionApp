package autominion.database.persistence.entities;
// default package

// Generated 2 feb 2023 9:48:16 by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Mechanics generated by hbm2java
 */
@Entity
@Table(name = "mechanics", catalog = "autominionbbdd")
public class Mechanics extends AbstractEntity implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private long id;
	private Employees employees;
	private Mechanics mechanics;
	private Set<Speciality> specialities = new HashSet<Speciality>(0);
	private Set<Mechanics> mechanicses = new HashSet<Mechanics>(0);
	private Set<Repairs> repairses = new HashSet<Repairs>(0);

	public Mechanics() {
	}

	public Mechanics(Employees employees) {
		this.employees = employees;
	}

	public Mechanics(Employees employees, Mechanics mechanics, Set<Speciality> specialities, Set<Mechanics> mechanicses,
			Set<Repairs> repairses) {
		this.employees = employees;
		this.mechanics = mechanics;
		this.specialities = specialities;
		this.mechanicses = mechanicses;
		this.repairses = repairses;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "employees"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Employees getEmployees() {
		return this.employees;
	}

	public void setEmployees(Employees employees) {
		this.employees = employees;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "bossId")
	public Mechanics getMechanics() {
		return this.mechanics;
	}

	public void setMechanics(Mechanics mechanics) {
		this.mechanics = mechanics;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "mechanicspeciality", catalog = "autominionbbdd", joinColumns = {
			@JoinColumn(name = "MechanicId", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "SpecialityId", nullable = false, updatable = false) })
	public Set<Speciality> getSpecialities() {
		return this.specialities;
	}

	public void setSpecialities(Set<Speciality> specialities) {
		this.specialities = specialities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mechanics")
	public Set<Mechanics> getMechanicses() {
		return this.mechanicses;
	}

	public void setMechanicses(Set<Mechanics> mechanicses) {
		this.mechanicses = mechanicses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mechanics")
	public Set<Repairs> getRepairses() {
		return this.repairses;
	}

	public void setRepairses(Set<Repairs> repairses) {
		this.repairses = repairses;
	}

	@Override
	public String toString() {
		return "Mechanics [id=" + id + ", employees=" + employees + ", specialities=" + specialities + "]";
	}
}
