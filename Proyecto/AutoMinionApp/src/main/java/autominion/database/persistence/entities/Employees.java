package autominion.database.persistence.entities;
// default package
// Generated 2 feb 2023 9:48:16 by Hibernate Tools 4.3.6.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Employees generated by hbm2java
 */
@Entity
@Table(name = "employees", catalog = "autominionbbdd")
public class Employees extends AbstractEntity implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	
	private long id;
	private Concessionaires concessionaires;
	private String name;
	private String surname1;
	private String surname2;
	private String phone;
	private String email;
	private String password;
	private String profileImage;
	private String address;
	private Salesemployees salesemployees;
	private Director director;
	private Mechanics mechanics;

	public Employees() {
	}

	public Employees(Concessionaires concessionaires, String name, String surname1, String surname2,
			String phone, String email, String password, String profileImage, String address,
			Salesemployees salesemployees, Director director, Mechanics mechanics) {
		this.concessionaires = concessionaires;
		this.name = name;
		this.surname1 = surname1;
		this.surname2 = surname2;
		this.phone = phone;
		this.email = email;
		this.password = password;
		this.profileImage = profileImage;
		this.address = address;
		this.salesemployees = salesemployees;
		this.director = director;
		this.mechanics = mechanics;
	}
	
	public Employees(String name, String surname1, String surname2, String phone, String email, String address) {
		this.name = name;
		this.surname1 = surname1;
		this.surname2 = surname2;
		this.phone = phone;
		this.email = email;
		this.address = address;
		this.profileImage = null;
		this.password = null;
		this.concessionaires = new Concessionaires(1L);
		this.salesemployees = null;
		this.director = null;
		this.mechanics = null;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "concessionaireId")
	public Concessionaires getConcessionaires() {
		return this.concessionaires;
	}

	public void setConcessionaires(Concessionaires concessionaires) {
		this.concessionaires = concessionaires;
	}

	@Column(name = "name", length = 20)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "surname1", length = 20)
	public String getSurname1() {
		return this.surname1;
	}

	public void setSurname1(String surname1) {
		this.surname1 = surname1;
	}

	@Column(name = "surname2", length = 20)
	public String getSurname2() {
		return this.surname2;
	}

	public void setSurname2(String surname2) {
		this.surname2 = surname2;
	}

	@Column(name = "phone", length = 15)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "email", length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", length = 65535)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "profileImage", length = 65535)
	public String getProfileImage() {
		return this.profileImage;
	}

	public void setProfileImage(String profileImage) {
		this.profileImage = profileImage;
	}

	@Column(name = "address", length = 50)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "employees")
	public Salesemployees getSalesemployees() {
		return this.salesemployees;
	}

	public void setSalesemployees(Salesemployees salesemployees) {
		this.salesemployees = salesemployees;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "employees")
	public Director getDirector() {
		return this.director;
	}

	public void setDirector(Director director) {
		this.director = director;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "employees")
	public Mechanics getMechanics() {
		return this.mechanics;
	}

	public void setMechanics(Mechanics mechanics) {
		this.mechanics = mechanics;
	}

	@Override
	public String toString() {
		return "Employees [id=" + id + ", concessionaires=" + concessionaires + ", name=" + name + ", surname1="
				+ surname1 + ", surname2=" + surname2 + ", phone=" + phone + ", email=" + email + ", password="
				+ password + ", profileImage=" + profileImage + ", address=" + address + "]";
	}

}
